import groovy.json.JsonSlurper
import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
  // The Android Gradle plugin is only required when opening the android folder stand-alone.
  // This avoids unnecessary downloads and potential conflicts when the library is included as a
  // module dependency in an application project.
  //if (project == rootProject) {
  repositories {
    google()
    mavenCentral()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
    maven { url 'https://jitpack.io' }
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:7.4.2'
    classpath "de.undercouch:gradle-download-task:4.1.1"
  }
  //}
}

apply plugin: 'com.android.library'
apply plugin: "de.undercouch.download"

def inputFile = new File(rootDir, '../node_modules/react-native/package.json')
def json = new JsonSlurper().parseText(inputFile.text)
def reactNativeVersion = json.version as String
def (major, minor, patchhh) = reactNativeVersion.tokenize('.')
def rnMinorVersion = minor.toInteger();

def isNewArchitectureEnabled() {
  return rootProject.hasProperty("newArchEnabled") && rootProject.getProperty("newArchEnabled") == "true"
}

def resolveReactNativeDirectory() {
    return new File(['node', '--print', "path.dirname(require.resolve('react-native/package.json'))"].execute(null, rootDir).text.trim())
}

// third-party-ndk deps headers
// mostly a copy of https://github.com/software-mansion/react-native-reanimated/blob/master/android/build.gradle#L115

// You need to have following folders in this directory:
//   - boost_1_63_0
//   - double-conversion-1.1.6
//   - folly-deprecate-dynamic-initializer
//   - glog-0.3.5
def dependenciesPath = System.getenv("REACT_NATIVE_DEPENDENCIES")

// The Boost library is a very large download (>100MB).
// If Boost is already present on your system, define the REACT_NATIVE_BOOST_PATH env variable
// and the build will use that.
def boostPath = dependenciesPath ?: System.getenv("REACT_NATIVE_BOOST_PATH")
def reactNativeRootDir = resolveReactNativeDirectory()
def reactNativeThirdParty = new File("$reactNativeRootDir/ReactAndroid/src/main/jni/third-party")
def reactNativeAndroidDownloadDir = new File("$reactNativeRootDir/ReactAndroid/build/downloads")

def downloadsDir = new File("$buildDir/downloads")
def thirdPartyNdkDir = new File("$buildDir/third-party-ndk")
def thirdPartyVersionsFile = new File("${rootDir}/../node_modules/react-native/ReactAndroid/gradle.properties")
def thirdPartyVersions = new Properties()
thirdPartyVersions.load(new FileInputStream(thirdPartyVersionsFile))

def BOOST_VERSION = thirdPartyVersions["BOOST_VERSION"]
def DOUBLE_CONVERSION_VERSION = thirdPartyVersions["DOUBLE_CONVERSION_VERSION"]
def FOLLY_VERSION = thirdPartyVersions["FOLLY_VERSION"]
def GLOG_VERSION = thirdPartyVersions["GLOG_VERSION"]

def getExtOrDefault(name, defaultValue) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : defaultValue
}

android {
  compileOptions {
      sourceCompatibility JavaVersion.VERSION_11
      targetCompatibility JavaVersion.VERSION_11
  }

  compileSdkVersion getExtOrDefault('compileSdkVersion', 33) 
  defaultConfig {
    minSdkVersion getExtOrDefault('minSdkVersion', 21)
    targetSdkVersion getExtOrDefault('targetSdkVersion', 33)
  }

  lintOptions{
    abortOnError false
  }

  externalNativeBuild {
    cmake {
      path "Android.mk"
    }
  }

  packagingOptions {
    excludes = ["**/libc++_shared.so","**/libfbjni.so","**/libreactnativejni.so","**/libreactnativeutilsjni.so","**/libreanimated.so","**/libjsi.so"]
  }

  buildFeatures {
    prefab false
  }

  configurations {
    extractHeaders
    extractJNI
  }
  sourceSets {
    main {
      res {
        srcDirs 'src/main/res'
      }
      if (isNewArchitectureEnabled()) {
          java.srcDirs += [
            // This is needed to build Kotlin project with NewArch enabled
            "${project.buildDir}/generated/source/codegen/java"
          ]
      }
    }
  }
}

repositories {
  google()
  mavenCentral()
}

dependencies {
  //noinspection GradleDynamicVersion
  implementation 'com.facebook.react:react-native:+'
  implementation project(':react-native-reanimated')
}

// fbjni
// https://github.com/facebookincubator/fbjni/blob/master/docs/android_setup.md

if (isNewArchitectureEnabled()) {
  react {
    jsRootDir = file("../src/")
    libraryName = codegenViewLibraryName
    codegenJavaPackageName = "com.reactnativemultithreading"
  }
}